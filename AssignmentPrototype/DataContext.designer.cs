#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssignmentPrototype
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ArtGallery")]
	public partial class DataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArtistUpload(ArtistUpload instance);
    partial void UpdateArtistUpload(ArtistUpload instance);
    partial void DeleteArtistUpload(ArtistUpload instance);
    partial void InsertCustomerTable(CustomerTable instance);
    partial void UpdateCustomerTable(CustomerTable instance);
    partial void DeleteCustomerTable(CustomerTable instance);
    partial void InsertPurchase(Purchase instance);
    partial void UpdatePurchase(Purchase instance);
    partial void DeletePurchase(Purchase instance);
    partial void InsertShoppingCart(ShoppingCart instance);
    partial void UpdateShoppingCart(ShoppingCart instance);
    partial void DeleteShoppingCart(ShoppingCart instance);
    partial void InsertWishList(WishList instance);
    partial void UpdateWishList(WishList instance);
    partial void DeleteWishList(WishList instance);
    partial void InsertArtistTable(ArtistTable instance);
    partial void UpdateArtistTable(ArtistTable instance);
    partial void DeleteArtistTable(ArtistTable instance);
    partial void InsertPurchaseDetail(PurchaseDetail instance);
    partial void UpdatePurchaseDetail(PurchaseDetail instance);
    partial void DeletePurchaseDetail(PurchaseDetail instance);
    #endregion
		
		public DataContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ArtistUpload> ArtistUploads
		{
			get
			{
				return this.GetTable<ArtistUpload>();
			}
		}
		
		public System.Data.Linq.Table<CustomerTable> CustomerTables
		{
			get
			{
				return this.GetTable<CustomerTable>();
			}
		}
		
		public System.Data.Linq.Table<Purchase> Purchases
		{
			get
			{
				return this.GetTable<Purchase>();
			}
		}
		
		public System.Data.Linq.Table<ShoppingCart> ShoppingCarts
		{
			get
			{
				return this.GetTable<ShoppingCart>();
			}
		}
		
		public System.Data.Linq.Table<WishList> WishLists
		{
			get
			{
				return this.GetTable<WishList>();
			}
		}
		
		public System.Data.Linq.Table<ArtistTable> ArtistTables
		{
			get
			{
				return this.GetTable<ArtistTable>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseDetail> PurchaseDetails
		{
			get
			{
				return this.GetTable<PurchaseDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArtistUpload")]
	public partial class ArtistUpload : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productID;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _quantity;
		
		private string _authorEmail;
		
		private string _productname;
		
		private System.Nullable<decimal> _productPrice;
		
		private System.Data.Linq.Binary _artImage;
		
		private EntitySet<ShoppingCart> _ShoppingCarts;
		
		private EntitySet<WishList> _WishLists;
		
		private EntityRef<ArtistTable> _ArtistTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductIDChanging(int value);
    partial void OnproductIDChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnauthorEmailChanging(string value);
    partial void OnauthorEmailChanged();
    partial void OnproductnameChanging(string value);
    partial void OnproductnameChanged();
    partial void OnproductPriceChanging(System.Nullable<decimal> value);
    partial void OnproductPriceChanged();
    partial void OnartImageChanging(System.Data.Linq.Binary value);
    partial void OnartImageChanged();
    #endregion
		
		public ArtistUpload()
		{
			this._ShoppingCarts = new EntitySet<ShoppingCart>(new Action<ShoppingCart>(this.attach_ShoppingCarts), new Action<ShoppingCart>(this.detach_ShoppingCarts));
			this._WishLists = new EntitySet<WishList>(new Action<WishList>(this.attach_WishLists), new Action<WishList>(this.detach_WishLists));
			this._ArtistTable = default(EntityRef<ArtistTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorEmail", DbType="NVarChar(50)")]
		public string authorEmail
		{
			get
			{
				return this._authorEmail;
			}
			set
			{
				if ((this._authorEmail != value))
				{
					if (this._ArtistTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnauthorEmailChanging(value);
					this.SendPropertyChanging();
					this._authorEmail = value;
					this.SendPropertyChanged("authorEmail");
					this.OnauthorEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productname", DbType="NVarChar(50)")]
		public string productname
		{
			get
			{
				return this._productname;
			}
			set
			{
				if ((this._productname != value))
				{
					this.OnproductnameChanging(value);
					this.SendPropertyChanging();
					this._productname = value;
					this.SendPropertyChanged("productname");
					this.OnproductnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productPrice", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> productPrice
		{
			get
			{
				return this._productPrice;
			}
			set
			{
				if ((this._productPrice != value))
				{
					this.OnproductPriceChanging(value);
					this.SendPropertyChanging();
					this._productPrice = value;
					this.SendPropertyChanged("productPrice");
					this.OnproductPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_artImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary artImage
		{
			get
			{
				return this._artImage;
			}
			set
			{
				if ((this._artImage != value))
				{
					this.OnartImageChanging(value);
					this.SendPropertyChanging();
					this._artImage = value;
					this.SendPropertyChanged("artImage");
					this.OnartImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArtistUpload_ShoppingCart", Storage="_ShoppingCarts", ThisKey="productID", OtherKey="productID")]
		public EntitySet<ShoppingCart> ShoppingCarts
		{
			get
			{
				return this._ShoppingCarts;
			}
			set
			{
				this._ShoppingCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArtistUpload_WishList", Storage="_WishLists", ThisKey="productID", OtherKey="productID")]
		public EntitySet<WishList> WishLists
		{
			get
			{
				return this._WishLists;
			}
			set
			{
				this._WishLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArtistTable_ArtistUpload", Storage="_ArtistTable", ThisKey="authorEmail", OtherKey="authorEmail", IsForeignKey=true)]
		public ArtistTable ArtistTable
		{
			get
			{
				return this._ArtistTable.Entity;
			}
			set
			{
				ArtistTable previousValue = this._ArtistTable.Entity;
				if (((previousValue != value) 
							|| (this._ArtistTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArtistTable.Entity = null;
						previousValue.ArtistUploads.Remove(this);
					}
					this._ArtistTable.Entity = value;
					if ((value != null))
					{
						value.ArtistUploads.Add(this);
						this._authorEmail = value.authorEmail;
					}
					else
					{
						this._authorEmail = default(string);
					}
					this.SendPropertyChanged("ArtistTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingCarts(ShoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.ArtistUpload = this;
		}
		
		private void detach_ShoppingCarts(ShoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.ArtistUpload = null;
		}
		
		private void attach_WishLists(WishList entity)
		{
			this.SendPropertyChanging();
			entity.ArtistUpload = this;
		}
		
		private void detach_WishLists(WishList entity)
		{
			this.SendPropertyChanging();
			entity.ArtistUpload = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerTable")]
	public partial class CustomerTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerId;
		
		private string _CustomerUsername;
		
		private string _CustomerPswd;
		
		private string _CustomerEmail;
		
		private string _CustomerName;
		
		private string _CustomerGender;
		
		private string _CustomerPhoneNum;
		
		private System.Nullable<System.DateTime> _CustomerDOB;
		
		private string _CustomerHouseAddress;
		
		private EntitySet<Purchase> _Purchases;
		
		private EntitySet<ShoppingCart> _ShoppingCarts;
		
		private EntitySet<WishList> _WishLists;
		
		private EntitySet<PurchaseDetail> _PurchaseDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnCustomerUsernameChanging(string value);
    partial void OnCustomerUsernameChanged();
    partial void OnCustomerPswdChanging(string value);
    partial void OnCustomerPswdChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerGenderChanging(string value);
    partial void OnCustomerGenderChanged();
    partial void OnCustomerPhoneNumChanging(string value);
    partial void OnCustomerPhoneNumChanged();
    partial void OnCustomerDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomerDOBChanged();
    partial void OnCustomerHouseAddressChanging(string value);
    partial void OnCustomerHouseAddressChanged();
    #endregion
		
		public CustomerTable()
		{
			this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
			this._ShoppingCarts = new EntitySet<ShoppingCart>(new Action<ShoppingCart>(this.attach_ShoppingCarts), new Action<ShoppingCart>(this.detach_ShoppingCarts));
			this._WishLists = new EntitySet<WishList>(new Action<WishList>(this.attach_WishLists), new Action<WishList>(this.detach_WishLists));
			this._PurchaseDetails = new EntitySet<PurchaseDetail>(new Action<PurchaseDetail>(this.attach_PurchaseDetails), new Action<PurchaseDetail>(this.detach_PurchaseDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerUsername", DbType="NVarChar(50)")]
		public string CustomerUsername
		{
			get
			{
				return this._CustomerUsername;
			}
			set
			{
				if ((this._CustomerUsername != value))
				{
					this.OnCustomerUsernameChanging(value);
					this.SendPropertyChanging();
					this._CustomerUsername = value;
					this.SendPropertyChanged("CustomerUsername");
					this.OnCustomerUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPswd", DbType="NVarChar(50)")]
		public string CustomerPswd
		{
			get
			{
				return this._CustomerPswd;
			}
			set
			{
				if ((this._CustomerPswd != value))
				{
					this.OnCustomerPswdChanging(value);
					this.SendPropertyChanging();
					this._CustomerPswd = value;
					this.SendPropertyChanged("CustomerPswd");
					this.OnCustomerPswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerEmail
		{
			get
			{
				return this._CustomerEmail;
			}
			set
			{
				if ((this._CustomerEmail != value))
				{
					this.OnCustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmail = value;
					this.SendPropertyChanged("CustomerEmail");
					this.OnCustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGender", DbType="NVarChar(10)")]
		public string CustomerGender
		{
			get
			{
				return this._CustomerGender;
			}
			set
			{
				if ((this._CustomerGender != value))
				{
					this.OnCustomerGenderChanging(value);
					this.SendPropertyChanging();
					this._CustomerGender = value;
					this.SendPropertyChanged("CustomerGender");
					this.OnCustomerGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhoneNum", DbType="NVarChar(15)")]
		public string CustomerPhoneNum
		{
			get
			{
				return this._CustomerPhoneNum;
			}
			set
			{
				if ((this._CustomerPhoneNum != value))
				{
					this.OnCustomerPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhoneNum = value;
					this.SendPropertyChanged("CustomerPhoneNum");
					this.OnCustomerPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDOB", DbType="Date")]
		public System.Nullable<System.DateTime> CustomerDOB
		{
			get
			{
				return this._CustomerDOB;
			}
			set
			{
				if ((this._CustomerDOB != value))
				{
					this.OnCustomerDOBChanging(value);
					this.SendPropertyChanging();
					this._CustomerDOB = value;
					this.SendPropertyChanged("CustomerDOB");
					this.OnCustomerDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerHouseAddress", DbType="NVarChar(100)")]
		public string CustomerHouseAddress
		{
			get
			{
				return this._CustomerHouseAddress;
			}
			set
			{
				if ((this._CustomerHouseAddress != value))
				{
					this.OnCustomerHouseAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerHouseAddress = value;
					this.SendPropertyChanged("CustomerHouseAddress");
					this.OnCustomerHouseAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTable_Purchase", Storage="_Purchases", ThisKey="CustomerEmail", OtherKey="customerEmail")]
		public EntitySet<Purchase> Purchases
		{
			get
			{
				return this._Purchases;
			}
			set
			{
				this._Purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTable_ShoppingCart", Storage="_ShoppingCarts", ThisKey="CustomerEmail", OtherKey="customerEmail")]
		public EntitySet<ShoppingCart> ShoppingCarts
		{
			get
			{
				return this._ShoppingCarts;
			}
			set
			{
				this._ShoppingCarts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTable_WishList", Storage="_WishLists", ThisKey="CustomerEmail", OtherKey="customerEmail")]
		public EntitySet<WishList> WishLists
		{
			get
			{
				return this._WishLists;
			}
			set
			{
				this._WishLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTable_PurchaseDetail", Storage="_PurchaseDetails", ThisKey="CustomerEmail", OtherKey="customerEmail")]
		public EntitySet<PurchaseDetail> PurchaseDetails
		{
			get
			{
				return this._PurchaseDetails;
			}
			set
			{
				this._PurchaseDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTable = this;
		}
		
		private void detach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTable = null;
		}
		
		private void attach_ShoppingCarts(ShoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTable = this;
		}
		
		private void detach_ShoppingCarts(ShoppingCart entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTable = null;
		}
		
		private void attach_WishLists(WishList entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTable = this;
		}
		
		private void detach_WishLists(WishList entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTable = null;
		}
		
		private void attach_PurchaseDetails(PurchaseDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTable = this;
		}
		
		private void detach_PurchaseDetails(PurchaseDetail entity)
		{
			this.SendPropertyChanging();
			entity.CustomerTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchase")]
	public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentID;
		
		private System.Nullable<int> _PurchaseHistoryDetailsID;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private string _PaymentType;
		
		private string _customerEmail;
		
		private EntityRef<CustomerTable> _CustomerTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIDChanging(int value);
    partial void OnPaymentIDChanged();
    partial void OnPurchaseHistoryDetailsIDChanging(System.Nullable<int> value);
    partial void OnPurchaseHistoryDetailsIDChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnPaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnPaymentAmountChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OncustomerEmailChanging(string value);
    partial void OncustomerEmailChanged();
    #endregion
		
		public Purchase()
		{
			this._CustomerTable = default(EntityRef<CustomerTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseHistoryDetailsID", DbType="Int")]
		public System.Nullable<int> PurchaseHistoryDetailsID
		{
			get
			{
				return this._PurchaseHistoryDetailsID;
			}
			set
			{
				if ((this._PurchaseHistoryDetailsID != value))
				{
					this.OnPurchaseHistoryDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseHistoryDetailsID = value;
					this.SendPropertyChanged("PurchaseHistoryDetailsID");
					this.OnPurchaseHistoryDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this.OnPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentAmount = value;
					this.SendPropertyChanged("PaymentAmount");
					this.OnPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="NVarChar(50)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerEmail", DbType="NVarChar(50)")]
		public string customerEmail
		{
			get
			{
				return this._customerEmail;
			}
			set
			{
				if ((this._customerEmail != value))
				{
					if (this._CustomerTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._customerEmail = value;
					this.SendPropertyChanged("customerEmail");
					this.OncustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTable_Purchase", Storage="_CustomerTable", ThisKey="customerEmail", OtherKey="CustomerEmail", IsForeignKey=true)]
		public CustomerTable CustomerTable
		{
			get
			{
				return this._CustomerTable.Entity;
			}
			set
			{
				CustomerTable previousValue = this._CustomerTable.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTable.Entity = null;
						previousValue.Purchases.Remove(this);
					}
					this._CustomerTable.Entity = value;
					if ((value != null))
					{
						value.Purchases.Add(this);
						this._customerEmail = value.CustomerEmail;
					}
					else
					{
						this._customerEmail = default(string);
					}
					this.SendPropertyChanged("CustomerTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingCart")]
	public partial class ShoppingCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cartID;
		
		private int _productID;
		
		private string _productName;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _unitPrice;
		
		private string _customerEmail;
		
		private EntityRef<CustomerTable> _CustomerTable;
		
		private EntityRef<ArtistUpload> _ArtistUpload;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncartIDChanging(int value);
    partial void OncartIDChanged();
    partial void OnproductIDChanging(int value);
    partial void OnproductIDChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnunitPriceChanging(System.Nullable<decimal> value);
    partial void OnunitPriceChanged();
    partial void OncustomerEmailChanging(string value);
    partial void OncustomerEmailChanged();
    #endregion
		
		public ShoppingCart()
		{
			this._CustomerTable = default(EntityRef<CustomerTable>);
			this._ArtistUpload = default(EntityRef<ArtistUpload>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cartID
		{
			get
			{
				return this._cartID;
			}
			set
			{
				if ((this._cartID != value))
				{
					this.OncartIDChanging(value);
					this.SendPropertyChanging();
					this._cartID = value;
					this.SendPropertyChanged("cartID");
					this.OncartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int NOT NULL")]
		public int productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._ArtistUpload.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(100)")]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerEmail", DbType="NVarChar(50)")]
		public string customerEmail
		{
			get
			{
				return this._customerEmail;
			}
			set
			{
				if ((this._customerEmail != value))
				{
					if (this._CustomerTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._customerEmail = value;
					this.SendPropertyChanged("customerEmail");
					this.OncustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTable_ShoppingCart", Storage="_CustomerTable", ThisKey="customerEmail", OtherKey="CustomerEmail", IsForeignKey=true)]
		public CustomerTable CustomerTable
		{
			get
			{
				return this._CustomerTable.Entity;
			}
			set
			{
				CustomerTable previousValue = this._CustomerTable.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTable.Entity = null;
						previousValue.ShoppingCarts.Remove(this);
					}
					this._CustomerTable.Entity = value;
					if ((value != null))
					{
						value.ShoppingCarts.Add(this);
						this._customerEmail = value.CustomerEmail;
					}
					else
					{
						this._customerEmail = default(string);
					}
					this.SendPropertyChanged("CustomerTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArtistUpload_ShoppingCart", Storage="_ArtistUpload", ThisKey="productID", OtherKey="productID", IsForeignKey=true)]
		public ArtistUpload ArtistUpload
		{
			get
			{
				return this._ArtistUpload.Entity;
			}
			set
			{
				ArtistUpload previousValue = this._ArtistUpload.Entity;
				if (((previousValue != value) 
							|| (this._ArtistUpload.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArtistUpload.Entity = null;
						previousValue.ShoppingCarts.Remove(this);
					}
					this._ArtistUpload.Entity = value;
					if ((value != null))
					{
						value.ShoppingCarts.Add(this);
						this._productID = value.productID;
					}
					else
					{
						this._productID = default(int);
					}
					this.SendPropertyChanged("ArtistUpload");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WishList")]
	public partial class WishList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _wishListID;
		
		private int _productID;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _unitPrice;
		
		private string _customerEmail;
		
		private EntityRef<CustomerTable> _CustomerTable;
		
		private EntityRef<ArtistUpload> _ArtistUpload;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnwishListIDChanging(int value);
    partial void OnwishListIDChanged();
    partial void OnproductIDChanging(int value);
    partial void OnproductIDChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnunitPriceChanging(System.Nullable<decimal> value);
    partial void OnunitPriceChanged();
    partial void OncustomerEmailChanging(string value);
    partial void OncustomerEmailChanged();
    #endregion
		
		public WishList()
		{
			this._CustomerTable = default(EntityRef<CustomerTable>);
			this._ArtistUpload = default(EntityRef<ArtistUpload>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wishListID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int wishListID
		{
			get
			{
				return this._wishListID;
			}
			set
			{
				if ((this._wishListID != value))
				{
					this.OnwishListIDChanging(value);
					this.SendPropertyChanging();
					this._wishListID = value;
					this.SendPropertyChanged("wishListID");
					this.OnwishListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int NOT NULL")]
		public int productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					if (this._ArtistUpload.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string customerEmail
		{
			get
			{
				return this._customerEmail;
			}
			set
			{
				if ((this._customerEmail != value))
				{
					if (this._CustomerTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._customerEmail = value;
					this.SendPropertyChanged("customerEmail");
					this.OncustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTable_WishList", Storage="_CustomerTable", ThisKey="customerEmail", OtherKey="CustomerEmail", IsForeignKey=true)]
		public CustomerTable CustomerTable
		{
			get
			{
				return this._CustomerTable.Entity;
			}
			set
			{
				CustomerTable previousValue = this._CustomerTable.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTable.Entity = null;
						previousValue.WishLists.Remove(this);
					}
					this._CustomerTable.Entity = value;
					if ((value != null))
					{
						value.WishLists.Add(this);
						this._customerEmail = value.CustomerEmail;
					}
					else
					{
						this._customerEmail = default(string);
					}
					this.SendPropertyChanged("CustomerTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArtistUpload_WishList", Storage="_ArtistUpload", ThisKey="productID", OtherKey="productID", IsForeignKey=true)]
		public ArtistUpload ArtistUpload
		{
			get
			{
				return this._ArtistUpload.Entity;
			}
			set
			{
				ArtistUpload previousValue = this._ArtistUpload.Entity;
				if (((previousValue != value) 
							|| (this._ArtistUpload.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ArtistUpload.Entity = null;
						previousValue.WishLists.Remove(this);
					}
					this._ArtistUpload.Entity = value;
					if ((value != null))
					{
						value.WishLists.Add(this);
						this._productID = value.productID;
					}
					else
					{
						this._productID = default(int);
					}
					this.SendPropertyChanged("ArtistUpload");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArtistTable")]
	public partial class ArtistTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _authorID;
		
		private string _address;
		
		private string _contact;
		
		private string _authorName;
		
		private string _authorEmail;
		
		private string _authorPswd;
		
		private string _authorUsername;
		
		private string _authorGender;
		
		private System.Nullable<System.DateTime> _authorDOB;
		
		private EntitySet<ArtistUpload> _ArtistUploads;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnauthorIDChanging(int value);
    partial void OnauthorIDChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    partial void OnauthorNameChanging(string value);
    partial void OnauthorNameChanged();
    partial void OnauthorEmailChanging(string value);
    partial void OnauthorEmailChanged();
    partial void OnauthorPswdChanging(string value);
    partial void OnauthorPswdChanged();
    partial void OnauthorUsernameChanging(string value);
    partial void OnauthorUsernameChanged();
    partial void OnauthorGenderChanging(string value);
    partial void OnauthorGenderChanged();
    partial void OnauthorDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnauthorDOBChanged();
    #endregion
		
		public ArtistTable()
		{
			this._ArtistUploads = new EntitySet<ArtistUpload>(new Action<ArtistUpload>(this.attach_ArtistUploads), new Action<ArtistUpload>(this.detach_ArtistUploads));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int authorID
		{
			get
			{
				return this._authorID;
			}
			set
			{
				if ((this._authorID != value))
				{
					this.OnauthorIDChanging(value);
					this.SendPropertyChanging();
					this._authorID = value;
					this.SendPropertyChanged("authorID");
					this.OnauthorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="NVarChar(15)")]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorName", DbType="NVarChar(50)")]
		public string authorName
		{
			get
			{
				return this._authorName;
			}
			set
			{
				if ((this._authorName != value))
				{
					this.OnauthorNameChanging(value);
					this.SendPropertyChanging();
					this._authorName = value;
					this.SendPropertyChanged("authorName");
					this.OnauthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string authorEmail
		{
			get
			{
				return this._authorEmail;
			}
			set
			{
				if ((this._authorEmail != value))
				{
					this.OnauthorEmailChanging(value);
					this.SendPropertyChanging();
					this._authorEmail = value;
					this.SendPropertyChanged("authorEmail");
					this.OnauthorEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorPswd", DbType="NVarChar(50)")]
		public string authorPswd
		{
			get
			{
				return this._authorPswd;
			}
			set
			{
				if ((this._authorPswd != value))
				{
					this.OnauthorPswdChanging(value);
					this.SendPropertyChanging();
					this._authorPswd = value;
					this.SendPropertyChanged("authorPswd");
					this.OnauthorPswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorUsername", DbType="NVarChar(50)")]
		public string authorUsername
		{
			get
			{
				return this._authorUsername;
			}
			set
			{
				if ((this._authorUsername != value))
				{
					this.OnauthorUsernameChanging(value);
					this.SendPropertyChanging();
					this._authorUsername = value;
					this.SendPropertyChanged("authorUsername");
					this.OnauthorUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorGender", DbType="NVarChar(10)")]
		public string authorGender
		{
			get
			{
				return this._authorGender;
			}
			set
			{
				if ((this._authorGender != value))
				{
					this.OnauthorGenderChanging(value);
					this.SendPropertyChanging();
					this._authorGender = value;
					this.SendPropertyChanged("authorGender");
					this.OnauthorGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authorDOB", DbType="Date")]
		public System.Nullable<System.DateTime> authorDOB
		{
			get
			{
				return this._authorDOB;
			}
			set
			{
				if ((this._authorDOB != value))
				{
					this.OnauthorDOBChanging(value);
					this.SendPropertyChanging();
					this._authorDOB = value;
					this.SendPropertyChanged("authorDOB");
					this.OnauthorDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ArtistTable_ArtistUpload", Storage="_ArtistUploads", ThisKey="authorEmail", OtherKey="authorEmail")]
		public EntitySet<ArtistUpload> ArtistUploads
		{
			get
			{
				return this._ArtistUploads;
			}
			set
			{
				this._ArtistUploads.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ArtistUploads(ArtistUpload entity)
		{
			this.SendPropertyChanging();
			entity.ArtistTable = this;
		}
		
		private void detach_ArtistUploads(ArtistUpload entity)
		{
			this.SendPropertyChanging();
			entity.ArtistTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseDetails")]
	public partial class PurchaseDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseHistoryDetailsID;
		
		private int _productID;
		
		private string _productName;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _unitPrice;
		
		private string _customerEmail;
		
		private string _status;
		
		private string _sellerEmail;
		
		private System.Nullable<System.DateTime> _purchaseDate;
		
		private System.Data.Linq.Binary _artImage;
		
		private EntityRef<CustomerTable> _CustomerTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseHistoryDetailsIDChanging(int value);
    partial void OnPurchaseHistoryDetailsIDChanged();
    partial void OnproductIDChanging(int value);
    partial void OnproductIDChanged();
    partial void OnproductNameChanging(string value);
    partial void OnproductNameChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnunitPriceChanging(System.Nullable<decimal> value);
    partial void OnunitPriceChanged();
    partial void OncustomerEmailChanging(string value);
    partial void OncustomerEmailChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnsellerEmailChanging(string value);
    partial void OnsellerEmailChanged();
    partial void OnpurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpurchaseDateChanged();
    partial void OnartImageChanging(System.Data.Linq.Binary value);
    partial void OnartImageChanged();
    #endregion
		
		public PurchaseDetail()
		{
			this._CustomerTable = default(EntityRef<CustomerTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseHistoryDetailsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseHistoryDetailsID
		{
			get
			{
				return this._PurchaseHistoryDetailsID;
			}
			set
			{
				if ((this._PurchaseHistoryDetailsID != value))
				{
					this.OnPurchaseHistoryDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseHistoryDetailsID = value;
					this.SendPropertyChanged("PurchaseHistoryDetailsID");
					this.OnPurchaseHistoryDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productID", DbType="Int NOT NULL")]
		public int productID
		{
			get
			{
				return this._productID;
			}
			set
			{
				if ((this._productID != value))
				{
					this.OnproductIDChanging(value);
					this.SendPropertyChanging();
					this._productID = value;
					this.SendPropertyChanged("productID");
					this.OnproductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productName", DbType="NVarChar(100)")]
		public string productName
		{
			get
			{
				return this._productName;
			}
			set
			{
				if ((this._productName != value))
				{
					this.OnproductNameChanging(value);
					this.SendPropertyChanging();
					this._productName = value;
					this.SendPropertyChanged("productName");
					this.OnproductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitPrice", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> unitPrice
		{
			get
			{
				return this._unitPrice;
			}
			set
			{
				if ((this._unitPrice != value))
				{
					this.OnunitPriceChanging(value);
					this.SendPropertyChanging();
					this._unitPrice = value;
					this.SendPropertyChanged("unitPrice");
					this.OnunitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerEmail", DbType="NVarChar(50)")]
		public string customerEmail
		{
			get
			{
				return this._customerEmail;
			}
			set
			{
				if ((this._customerEmail != value))
				{
					if (this._CustomerTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._customerEmail = value;
					this.SendPropertyChanged("customerEmail");
					this.OncustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sellerEmail", DbType="NVarChar(50)")]
		public string sellerEmail
		{
			get
			{
				return this._sellerEmail;
			}
			set
			{
				if ((this._sellerEmail != value))
				{
					this.OnsellerEmailChanging(value);
					this.SendPropertyChanging();
					this._sellerEmail = value;
					this.SendPropertyChanged("sellerEmail");
					this.OnsellerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseDate", DbType="Date")]
		public System.Nullable<System.DateTime> purchaseDate
		{
			get
			{
				return this._purchaseDate;
			}
			set
			{
				if ((this._purchaseDate != value))
				{
					this.OnpurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._purchaseDate = value;
					this.SendPropertyChanged("purchaseDate");
					this.OnpurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_artImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary artImage
		{
			get
			{
				return this._artImage;
			}
			set
			{
				if ((this._artImage != value))
				{
					this.OnartImageChanging(value);
					this.SendPropertyChanging();
					this._artImage = value;
					this.SendPropertyChanged("artImage");
					this.OnartImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerTable_PurchaseDetail", Storage="_CustomerTable", ThisKey="customerEmail", OtherKey="CustomerEmail", IsForeignKey=true)]
		public CustomerTable CustomerTable
		{
			get
			{
				return this._CustomerTable.Entity;
			}
			set
			{
				CustomerTable previousValue = this._CustomerTable.Entity;
				if (((previousValue != value) 
							|| (this._CustomerTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerTable.Entity = null;
						previousValue.PurchaseDetails.Remove(this);
					}
					this._CustomerTable.Entity = value;
					if ((value != null))
					{
						value.PurchaseDetails.Add(this);
						this._customerEmail = value.CustomerEmail;
					}
					else
					{
						this._customerEmail = default(string);
					}
					this.SendPropertyChanged("CustomerTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
